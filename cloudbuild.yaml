# cloudbuild.yaml
options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Langkah 0: Buat Repositori Artifact Registry jika belum ada
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud artifacts repositories describe cloud-run-source-deploy --project=$PROJECT_ID --location=us-central1 || \
        gcloud artifacts repositories create cloud-run-source-deploy \
          --repository-format=docker \
          --location=us-central1 \
          --description="Docker repository for Cloud Run source deployments" \
          --project=$PROJECT_ID
    id: 'Create Artifact Registry Repository'

  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/surat-server-tcc:$COMMIT_SHA"
      - "."
    dir: "."
    id: "Build Docker Image"

  # Step 2: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/surat-server-tcc:$COMMIT_SHA"
    id: "Push Docker Image"

  # Step 3: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "surat-server-tcc"
      - "--image"
      - "us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/surat-server-tcc:$COMMIT_SHA"
      - "--timeout"
      - "1000s"
      - "--port"
      - "3000"
      - "--region"
      - "us-central1"
      - "--allow-unauthenticated"
      - "--set-env-vars"
      - | # Hapus PORT=3000 dari sini. Cloud Run akan mengaturnya secara otomatis.
        NODE_ENV=production,
        GCS_BUCKET_NAME=c-01-450604,
        GCP_PROJECT_ID=c-01-450604,
        GCP_CLIENT_EMAIL=storage-uploader-service@c-01-450604.iam.gserviceaccount.com
    secretEnv: ['MYSQL_DATABASE_URL', 'POSTGRES_DATABASE_URL', 'JWT_SECRET', 'GCP_PRIVATE_KEY']
    id: 'Deploy to Cloud Run'

availableSecrets:
  secretManager:
    - versionName: projects/a-08-450504/secrets/MYSQL_DATABASE_URL_SECRET/versions/latest
      env: 'MYSQL_DATABASE_URL'
    - versionName: projects/a-08-450504/secrets/POSTGRES_DATABASE_URL_SECRET/versions/latest
      env: 'POSTGRES_DATABASE_URL'
    - versionName: projects/a-08-450504/secrets/JWT_SECRET_KEY/versions/latest
      env: 'JWT_SECRET'
    - versionName: projects/a-08-450504/secrets/GCP_PRIVATE_KEY_SECRET/versions/latest
      env: 'GCP_PRIVATE_KEY'